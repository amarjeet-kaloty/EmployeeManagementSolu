services:

  # -----------------------------------------------------------------
  #  PUBLISHER SERVICES (EmployeeManagementSolu)
  # -----------------------------------------------------------------
  presentation:
    image: ${DOCKER_REGISTRY-}presentation
    container_name: employee-api-container
    build:
      context: .
      dockerfile: Presentation/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy

  presentation-dapr:
    image: "daprio/dapr:1.16.0"
    container_name: dapr_container
    network_mode: service:presentation
    command: [
      "/daprd",
      "-app-id", "employeeservice",
      "-app-port", "8080",
      "-resources-path", "/app"
    ]
    volumes:
      - ./rabbitmq-pubsub.yaml:/app/rabbitmq-pubsub.yaml
    depends_on:
      rabbitmq:
        condition: service_healthy

  # -----------------------------------------------------------------
  #  SUBSCRIBER SERVICES (EmployeeNotifierSolu)
  # -----------------------------------------------------------------
  employeenotifier:
    image: ${DOCKER_REGISTRY-}employeenotifier
    container_name: employee-notifier-container
    build:
      context: ../EmployeeNotifierSolu
      dockerfile: EmployeeNotifier/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy

  employeenotifier-dapr:
    image: "daprio/dapr:1.16.0"
    container_name: dapr_subscriber_sidecar
    network_mode: service:employeenotifier
    command: [
      "/daprd",
      "-app-id", "notifierservice",
      "-app-port", "8080",
      "-resources-path", "/app"
    ]
    volumes:
      - ./rabbitmq-pubsub.yaml:/app/rabbitmq-pubsub.yaml
    depends_on:
      rabbitmq:
        condition: service_healthy
      employeenotifier:
        condition: service_started

  # -----------------------------------------------------------------
  #  INFRASTRUCTURE SERVICES
  # -----------------------------------------------------------------
  mongodb-service:
    image: mongo:latest
    container_name: mongodb_container
    ports:
      - "3000:27017"
    volumes:
      - mongo-data:/data/db

  rabbitmq: 
    image: rabbitmq:management
    container_name: rabbitmq_container
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 15s
      retries: 5
      start_period: 20s

volumes:
  mongo-data:
    